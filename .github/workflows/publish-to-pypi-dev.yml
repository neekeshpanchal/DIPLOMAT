name: Publish Python Development Distribution to PyPI

on:
  push:
    branches:
      - develop  # Trigger on pushes to develop branch

jobs:
  version-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get Latest Tag
        id: get-latest-tag
        uses: actions-ecosystem/action-get-latest-tag@v1.6.0
        with:
          semver_only: true
          with_initial_version: false
      - name: Code vs Releases Version Check
        id: release-info
        run: |
          RELEASE_VERSION=$(echo $LATEST_RELEASE | tr -d "v ")
          VERSION=$(cat diplomat/__init__.py | grep "__version_dev__" | cut -d "=" -f 2 | tr -d '" ')
          if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]
            then
              echo "$VERSION is not a valid version!"
              exit 1
          fi
          PROPOSED_TAG="v${VERSION}.dev"  # Append .dev for development builds
          echo "Python package version: $VERSION"
          echo "Github release version: $RELEASE_VERSION"
          echo "Next proposed tag: $PROPOSED_TAG"
          echo "PYTHON_VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> "$GITHUB_OUTPUT"
          echo "NEXT_TAG=$PROPOSED_TAG" >> "$GITHUB_OUTPUT"
        env:
          LATEST_RELEASE: ${{ steps.get-latest-tag.outputs.tag }}
    outputs:
      RELEASE_VERSION: ${{ steps.release-info.outputs.RELEASE_VERSION }}
      PYTHON_VERSION: ${{ steps.release-info.outputs.PYTHON_VERSION }}
      NEXT_TAG: ${{ steps.release-info.outputs.NEXT_TAG }}

  # Build, Publish and GitHub Release steps remain mostly the same, except for some nuances.
  # Here's a quick change for the publish-to-pypi job:
  build:
    name: Build distribution
    needs:
      - version-check
    if: "${{ needs.version-check.outputs.RELEASE_VERSION != needs.version-check.outputs.PYTHON_VERSION }}"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install pypa/build
      run: python3 -m pip install build --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/

    outputs:
      NEXT_TAG: "${{ needs.version-check.outputs.NEXT_TAG }}"


  publish-to-pypi:
    name: Publish Python development distribution to PyPI
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi # Use a different environment or adjust as necessary
      url: https://pypi.org/p/diplomat-track
    permissions:
      id-token: write
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
    outputs:
      NEXT_TAG: "${{ needs.build.outputs.NEXT_TAG }}"

